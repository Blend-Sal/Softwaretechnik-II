Index: Softwaretechnik2/src/main/java/com/example/softwaretechnik2/controllers/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.softwaretechnik2.controllers;\r\n\r\nimport com.example.softwaretechnik2.model.Product;\r\nimport com.example.softwaretechnik2.repositories.ProductRepository;\r\nimport com.example.softwaretechnik2.services.ProductService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpHeaders;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.MediaType;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.util.StringUtils;\r\nimport org.springframework.validation.BindingResult;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.springframework.web.multipart.MultipartFile;\r\n\r\nimport javax.servlet.ServletContext;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.Base64;\r\n\r\nimport java.util.List;\r\n\r\n@Controller\r\n//@RequestMapping(\"/product\")\r\npublic class ProductController extends Product {\r\n    @Autowired\r\n    ProductRepository repo;\r\n    @Autowired\r\n    ProductService productService;\r\n    @Autowired\r\n    private ServletContext servletContext;\r\n\r\n    @GetMapping(\"/product\")\r\n    public String getProd(Model model) {\r\n        List<Product> products = repo.getAllByProductNameIsNotNull();\r\n        model.addAttribute(\"products\", products);\r\n        return \"productList\";\r\n\r\n    }\r\n\r\n    @GetMapping(\"/produkterstellung\")\r\n    public String get(Model model) {\r\n        model.addAttribute(\"product\", new Product());\r\n        return \"produkterstellung\";\r\n    }\r\n\r\n    @GetMapping(\"/product/{id}\")\r\n    public String getProduct(@PathVariable Long id, Model model) {\r\n        Product product = repo.findProductById(id);\r\n        byte[] imageData = product.getImage();\r\n        String base64Image = Base64.getEncoder().encodeToString(imageData);\r\n        model.addAttribute(\"Image\", base64Image);\r\n        model.addAttribute(\"product\", product);\r\n        return \"detailsofproduct\";\r\n    }\r\n\r\n    //optimal image resolution is about 400x400 -> implement resize?\r\n    @PostMapping(\"/produkterstellung\")\r\n    public String post(@ModelAttribute Product newProduct, BindingResult result, @RequestParam(\"image\") MultipartFile image) throws IOException {\r\n        System.out.println(\"here\");\r\n        if (productService.checkIfProductExists(newProduct)) {\r\n            return \"errorDuplicateProduct\";\r\n        }\r\n        byte[] imageBytes = image.getBytes();\r\n        newProduct.setImage(imageBytes);\r\n        repo.save(newProduct);\r\n        return \"redirect:product/\" + newProduct.getId();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Softwaretechnik2/src/main/java/com/example/softwaretechnik2/controllers/ProductController.java b/Softwaretechnik2/src/main/java/com/example/softwaretechnik2/controllers/ProductController.java
--- a/Softwaretechnik2/src/main/java/com/example/softwaretechnik2/controllers/ProductController.java	(revision 558930f22a856599d22e620aac8f39ff6d01baa4)
+++ b/Softwaretechnik2/src/main/java/com/example/softwaretechnik2/controllers/ProductController.java	(date 1685994844398)
@@ -56,7 +56,6 @@
         return "detailsofproduct";
     }
 
-    //optimal image resolution is about 400x400 -> implement resize?
     @PostMapping("/produkterstellung")
     public String post(@ModelAttribute Product newProduct, BindingResult result, @RequestParam("image") MultipartFile image) throws IOException {
         System.out.println("here");
